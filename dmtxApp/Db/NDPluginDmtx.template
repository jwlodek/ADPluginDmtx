# Author: 

# include the base driver template file
include "NDPluginBase.template"


##################################################################
# Define all of your PV records here in the following form:
#
# record(RECORD_TYPE, "$(P)$(R)PVName"){
#   field(DTYP, "data type")
#   field(INP/OUT, "@asyn($(PORT),$(ADDR),$(TIMEOUT))PV_NAME")
#   field(VAL, "value")
#   field(SCAN, "I/O Intr")
# }
#
# Consult other .template files for guides on how to write specific PVs
#
# The PV_NAME at the end of the INP or OUT field of the record is the 
# PVString defined in NDPluginDmtx.h.
#
# example: #define NDPluginDmtxPVNameString "PV_NAME"
#
##################################################################



record(ao, "$(P)$(R)NumberCodes"){
    field(DTYP, "asynInt32")
    field(OUT, "@asyn($(PORT),$(ADDR), $(TIMEOUT))NUMBER_CODES")
    field(VAL, "0")
    info(autosaveFields, "VAL")
}

record(ai, "$(P)$(R)NumberCodes_RBV"){
    field(DTYP, "asynInt32")
    field(INP, "@asyn($(PORT),$(ADDR), $(TIMEOUT))NUMBER_CODES")
    field(VAL, "0")
    field(SCAN, "I/O Intr")
}

record(waveform, "$(P)$(R)CodeMessage_RBV"){
    field(DTYP, "asynOctetRead")
    field(INP, "@asyn($(PORT),$(ADDR), $(TIMEOUT))CODE_MESSAGE")
    field(FTVL, "CHAR")
    field(NELM, "256")   
    field(SCAN, "I/O Intr")
}


record(bo, "$(P)$(R)CodeFound"){
    field(DTYP, "asynInt32")
    field(OUT, "@asyn($(PORT),$(ADDR), $(TIMEOUT))CODE_FOUND")
    field(ZNAM, "NO")
    field(ONAM, "YES")
    field(VAL, "$(NONE=0)")
    info(autosaveFields, "VAL")
}

record(bi, "$(P)$(R)CodeFound_RBV"){
    field(DTYP, "asynInt32")
    field(INP, "@asyn($(PORT),$(ADDR), $(TIMEOUT))CODE_FOUND")
    field(ZNAM, "NO")
    field(ONAM, "YES")
    field(ZSV, "NO_ALARM")
    field(OSV, "MINOR")
    field(SCAN, "I/O Intr")
}

